server:
  port: 6789
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: dji-service
  datasource:
    druid:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://${DATABASE_DJI_HOST:localhost}:${DATABASE_DJI_PORT:3306}/${DATABASE_DJI_NAME:dji}?useSSL=false&allowPublicKeyRetrieval=true
      username: ${DATABASE_DJI_USERNAME:root}
      password: ${DATABASE_DJI_PASSWORD:password}
      initial-size: 10
      min-idle: 10
      max-active: 20
      max-wait: 60000

  redis:
    host: ${REDIS_DJI_HOST:localhost}
    port: 6379
    database: 0
    username: # if you enable
    password:
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  servlet:
    multipart:
      max-file-size: 2GB
      max-request-size: 2GB

jwt:
  issuer: DJI
  subject: CloudApiSample
  secret: CloudApiSample
  age: 86400

mqtt:
  # @see com.dji.sample.component.mqtt.model.MqttUseEnum
  # BASIC parameters are required.
  BASIC:
    protocol: MQTT # @see com.dji.sample.component.mqtt.model.MqttProtocolEnum
    host: emqx-broker
    port: 1883
    username: JavaServer
    password: 123456
    client-id: 123456
    # If the protocol is ws/wss, this value is required.
    path:
  DRC:
    protocol: WS # @see com.dji.sample.component.mqtt.model.MqttProtocolEnum
    host: 127.0.0.1
    port: 8083
    path: /mqtt
    username: JavaServer
    password: 123456

cloud-sdk:
  mqtt:
    # Topics that need to be subscribed when initially connecting to mqtt, multiple topics are divided by ",".
    inbound-topic: sys/product/+/status,thing/product/+/requests

url:
  manage:
    prefix: manage
    version: /api/v1
  map:
    prefix: map
    version: /api/v1
  media:
    prefix: media
    version: /api/v1
  wayline:
    prefix: wayline
    version: /api/v1
  storage:
    prefix: storage
    version: /api/v1
  control:
    prefix: control
    version: /api/v1

# Tutorial: https://www.alibabacloud.com/help/en/object-storage-service/latest/use-a-temporary-credential-provided-by-sts-to-access-oss
oss:
  enable: true
  provider: ALIYUN # @see com.dji.sample.component.OssConfiguration.model.enums.OssTypeEnum
  endpoint: ${ALIYUN_OSS_ENDPOINT:https://oss-cn-beijing.aliyuncs.com}
  access-key: ${ALIYUN_STS_ACCESS_KEY_ID:}
  secret-key: ${ALIYUN_STS_ACCESS_KEY_SECRET:}
  expire: ${ALIYUN_STS_SESSION_DURATION:3600}
  region: ${ALIYUN_STS_REGION_ID:oss-cn-beijing}
  role-session-name: ${ALIYUN_STS_ROLE_SESSION_NAME:cloudApi}
  role-arn: ${ALIYUN_STS_ROLE_ARN:}
  bucket: ${ALIYUN_OSS_BUCKET_NAME:q-file}
  object-dir-prefix: ${ALIYUN_OSS_OBJECT_PATH_PREFIX:dji/media}

#oss:
#  enable: true
#  provider: aws
#  endpoint: https://s3.us-east-1.amazonaws.com
#  access-key:
#  secret-key:
#  expire: 3600
#  region: us-east-1
#  role-session-name: cloudApi
#  role-arn:
#  bucket: cloudapi-bucket
#  object-dir-prefix: wayline

#oss:
#  enable: true
#  provider: minio
#  endpoint: http://192.168.1.1:9000
#  access-key: minioadmin
#  secret-key: minioadmin
#  bucket: cloud-bucket
#  expire: 3600
#  region: us-east-1
#  object-dir-prefix: wayline

logging:
  level:
    com.dji: debug
  file:
    name: logs/dji-service.log

ntp:
  server:
    host: Google.mzr.me

# To create a license for an application: https://developer.dji.com/user/apps/#all
cloud-api:
  app:
    id: 152613
    key: c9269ed9c93b4f46fe27763a334cc77
    license: UoMsU9jA+hWpaQ1+RcRjO+gXGFOm12yIjd1yclAzD2jqTtskbKBsB++S2fvzDreDWZGsh0VH7h7cRMFmBbyEXnIhsVTD+kvdD/JoFzSwxbJ7Z7s1NRxM362poVD8m6in/CDtU6r0PuuMm4UL3iZoy7+WjpscNLCzhranmQb33No=

livestream:
  url:
    # It is recommended to use a program to create Token. https://github.com/AgoraIO/Tools/blob/master/DynamicKey/AgoraDynamicKey/java/src/main/java/io/agora/media/RtcTokenBuilder2.java
    agora:
      channel: qingquan
      token: qingquan-token
      uid:  654321

    # RTMP  Note: This IP is the address of the streaming server. If you want to see livestream on web page, you need to convert the RTMP stream to WebRTC stream.
    rtmp:
      url: rtmp://127.0.0.1/live/  # Example: 'rtmp://192.168.1.1/live/'
    rtsp:
      username: qingquan
      password: XGFOm12yIjd1yclAzD2
      port: 8554

    # GB28181 Note:If you don't know what these parameters mean, you can go to Pilot2 and select the GB28181 page in the cloud platform. Where the parameters same as these parameters.
    gb28181:
      serverIP: 127.0.0.1
      serverPort: 8555
      serverID: qingquan-server
      agentID: client1
      agentPassword: qingquan
      localPort: 8556
      channel: qingquan

    # Webrtc: Only supports using whip standard
    whip:
      url: http://127.0.0.1:1985/rtc/v1/whip/?app=live&stream= #  Exampleï¼šhttp://192.168.1.1:1985/rtc/v1/whip/?app=live&stream=